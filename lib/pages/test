
import 'package:flutter/material.dart';
import 'package:patientapp/NetworkHandler.dart';
import 'package:patientapp/models/AddOrdoModel.dart';
import 'package:patientapp/models/globalmodel.dart';
import 'package:patientapp/pages/OrdoCard.dart';



class OrdoCard extends StatefulWidget {
  OrdoCard({Key key, this.addOrdoModel,this.url}) : super(key: key);
     AddOrdoModel addOrdoModel = AddOrdoModel();
     
 final String url;
  @override
  _OrdoCardState createState() => _OrdoCardState();
}

class _OrdoCardState extends State<OrdoCard> {
  NetworkHandler networkHandler = NetworkHandler();
 
globalmodel globalModel = globalmodel();
  List<AddOrdoModel> data = [];
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    fetchData();
  }
 void fetchData() async {
    var response = await networkHandler.get(widget.url);
    globalModel  = globalmodel.fromJson(response);
    setState(() {
      data = globalModel.data;
    }
    );
  }


  @override
  Widget build(BuildContext context) {
   Future<void> _confirmDialog() async {
    return showDialog<void>(
      context: context,
      barrierDismissible: false, // user must tap button!
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Warning!'),
          content: SingleChildScrollView(
            child: ListBody(
              children: <Widget>[
                Text('Are you sure want delete this item?'),
              ],
            ),
          ),
          actions: <Widget>[
            FlatButton(
              child: Text('Yes'),
              onPressed: () {
                AddOrdoModel addOrdoModel = AddOrdoModel();


        networkHandler.delete(
              "/ordonnances/delete/${addOrdoModel.id}",addOrdoModel);
                Navigator.popUntil(context, ModalRoute.withName(Navigator.defaultRouteName));
              },
            ),
            FlatButton(
              child: const Text('No'),
              onPressed: () {
                Navigator.of(context).pop();
              },
            ),
          ],
        );
      },
    );
  }
    return
    Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20,vertical: 20),
        child: Card(
          color:Color(0xffDDDDDD), 
          child: Stack(
            children: <Widget>[
                Center(
                  child: Container(
                    padding: EdgeInsets.symmetric(horizontal: 20,vertical: 20),
                    height: 60,
                    width: MediaQuery.of(context).size.width - 30,
                    decoration: BoxDecoration(
                        color: Color(0xffDDDDDD),
                        borderRadius: BorderRadius.circular(8)),
                    child:Center(
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children:<Widget>[
                            IconButton(
              icon: Icon(Icons.car_rental),
              onPressed: () {},
              color: Color(0xFF27313B),
                iconSize: 40,
                 padding:EdgeInsets.only(bottom:40)
            ),
                           
                        
              IconButton(
              icon: Icon(Icons.delete),
              onPressed: () {_confirmDialog();},
              color: Color(0xFF27313B),
                iconSize: 30,
                 padding:EdgeInsets.only(bottom:50)
            ),
                          ]
                        ),
                      ),
                    ),
                  ),
            ],
          ),
        
    ),
      );
  }
}